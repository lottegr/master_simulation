<launch>

<!-- Run the map server --> 
   <node name="map_server" pkg="map_server" type="map_server" args="$(find robot_navigation_params)/map/map.yaml"/>
   <node pkg="rviz" type="rviz" name="rviz" required="true" 
      args="-d $(find robot_navigation_params)/map/config_pose.rviz"/>

<!-- Run the robot model with transforms -->
   <include file="$(find rb1_description)/launch/remote.launch">
    <arg name="model" value="rb1_description" />
   </include>
   <node pkg="tf" type="static_transform_publisher" name="base_link_to_p"
    args="0.5 0.0 0.0 0.0 0.0  0.0 /base_link /p 40" />

<!-- Run the laser scan -->
   <!-- <include file="$(find ydlidar_ros)/launch/TG.launch" /> -->

<!-- Run the odometry source -->
   <node pkg="simulation_code" name="odom_from_encoder" type="odom_from_encoder" output="screen" />

<!--- Run AMCL --> 
   <include file="$(find robot_navigation_params)/launch/amcl.launch" />

   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="controller_frequency" type="double" value="10.0" />
    <rosparam file="$(find robot_navigation_params)/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find robot_navigation_params)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find robot_navigation_params)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot_navigation_params)/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find robot_navigation_params)/base_local_planner_params.yaml" command="load" />

   </node>
   
<!-- Run sensor fusion Kalman filter -->
   <include file="$(find robot_localization)/launch/ekf_amcl_odom.launch"/>
   <node name="pose_x_plot" pkg="rqt_plot" type="rqt_plot" 
         args="/odom/pose/pose/position/x 
               /amcl_pose/pose/pose/position/x
               /odometry/filtered_map/pose/pose/position/x"/>
   <node name="pose_y_plot" pkg="rqt_plot" type="rqt_plot" 
         args="/odom/pose/pose/position/y 
               /amcl_pose/pose/pose/position/y
               /odometry/filtered_map/pose/pose/position/y"/>
   <node name="pose_z_plot" pkg="rqt_plot" type="rqt_plot" 
         args="/odom/pose/pose/orientation/z 
               /amcl_pose/pose/pose/orientation/z 
               /odometry/filtered_map/pose/pose/orientation/z" />

<!-- Run nodes for collision avoidance and environment finding -->
   <node name="coll_avoid" pkg="simulation_code" type="coll_avoid" output="screen"/>
   <node name="exp_environment" pkg="simulation_code" type="exp_environment" output="screen"/>


</launch> 